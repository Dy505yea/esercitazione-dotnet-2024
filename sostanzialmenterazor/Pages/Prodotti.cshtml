@page
@model ProdottiModel
<style>
    /*
    .item1 {
        grid-area: header;
    }
    .item3 {
        grid-area: main;
    }

    .item4 {
        grid-area: right;
    }

    .grid-container {
        display: grid;
        grid-template-areas:
            'main right ';
        gap: 10px;
        background-color: #2196F3;
        padding: 10px;
    }

    .container {
        width: 100%;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(auto-fill, 120px);
        grid-row-gap: .5em;
        grid-column-gap: 1em;
    }

    .grid-container>div {
        background-color: rgba(255, 255, 255, 0.8);
        text-align: center;
        padding: 20px 0;
        font-size: 30px;
    }
    .grid-container>.item3, .grid-container>.item4 {
        background-color: rgba(255, 255, 255, 1);
    }
    .item3, .item4{
        font-weight: bolder;
    }
    */
    .confirm {
        background-color: white;
    }
    * {
  box-sizing: border-box;
}

body {
  font: 16px Arial;  
}

/*the container must be positioned relative:*/
.autocomplete {
  position: relative;
  display: inline-block;
}

input {
  border: 1px solid transparent;
  background-color: #f1f1f1;
  padding: 10px;
  font-size: 16px;
}

input[type=text] {
  background-color: #f1f1f1;
  width: 100%;
}

input[type=submit] {
  background-color: DodgerBlue;
  color: #fff;
  cursor: pointer;
}

.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
}

.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff; 
  border-bottom: 1px solid #d4d4d4; 
}

/*when hovering an item:*/
.autocomplete-items div:hover {
  background-color: #e9e9e9; 
}

/*when navigating through the items using the arrow keys:*/
.autocomplete-active {
  background-color: DodgerBlue !important; 
  color: #ffffff; 
}
</style>
@{
    ViewData["Title"] = "Prodotti";
}
<h1>@ViewData["Title"]</h1>


<h2>Prova di autocompletamento</h2>
<p>Start typing:</p>

<!--Make sure the form has the autocomplete function switched off:-->
<form autocomplete="off" action="/action_page.php">
  <div class="autocomplete" style="width:300px;">
    <input id="myInput" type="text" name="myCountry" placeholder="Country">
  </div>
  <input type="submit">
</form>


<form method="get">
    <div class="form-group">
        <label for="minPrezzo">Prezzo minimo</label>
        <input type="text" class="form-control" name="minPrezzo" />
    </div>
    <div class="form-group">
        <label for="maxPrezzo">Prezzo massimo</label>
        <input type="text" class="form-control" name="maxPrezzo" />
    </div>
    <br>
    <button type="submit" class="btn btn-primary"> Filtro</button>
</form>
<!--
<div class="grid-container">
    <div class="item3">Nome</div>
    <div class="item4">Prezzo</div>
@foreach (var prodotto in Model.Prodotti!)
{
                        <div>@prodotto.Nome</div>
                        <div>@prodotto.Prezzo $</div>
}
</div>
-->

<!--
@foreach (var prodotto in Model.Prodotti!)
{
                    <div class="card" style="width: 18rem;">
                        <div class="card-body">
                            <h5 class="card-title">@prodotto.Nome</h5>
                            <p class="card-prezzo">Prezzo: @prodotto.Prezzo $</p>
                        </div>
                    </div>
}
-->

<table class="table">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Prezio</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var prodotto in Model.Prodotti!)
        {

            string color;
            string textC;
            string textSet;
            string set;
            if (prodotto.Prezzo < 100)
            {
                color = "rgba(0,0,255,0.3)";
                textC = "rgba(255,255,255,1)";
            }
            else if (prodotto.Prezzo < 301)
            {
                color = "rgba(255,228,196,0.8)";
                textC = "rgba(0,0,0,1)";
            }
            else
            {
                color = "rgba(255,0,0,0.3)";
                textC = "rgba(255,255,255,1)";
            }
            textC = "black";
            textSet = "color: " + textC + "; ";
            set = textSet + "background-color: " + color + "; border-color: " + color + ";";
            set = set.Replace(" ", "");
            <tr>
                <td id="prova01" style=@set>@prodotto.Nome</td>
                <td id="prova02" style=@set>@prodotto.Prezzo</td>
            </tr>
        }
    </tbody>
</table>


<div class="row">
    @foreach (var prodotto in Model.Prodotti!)
    {
        <div class="col-sm-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@prodotto.Nome</h5>
                    @{
                        string color = "bisque";
                        string textC = "black";
                        string textSet = "color:" + textC + ";";
                        string set = "border-color:" + color + ";background-color:" + color + ";" + textSet;
                        if (prodotto.Prezzo < 100)
                        {
                            color = "blue";
                            textC = "white";
                            textSet = "color: " + textC + ";";
                            set = "border-color: " + color + "; background-color: " + color + ";" + textSet;
                            set = set.Replace(" ", "");
                            <p class="card-prezzo">Prezzo: @prodotto.Prezzo $</p>
                            <a asp-page="Prodotto" asp-route-nome="@prodotto.Nome" class="btn btn-primary" style="@set">Dettaglio</a>
                        }
                        else if (prodotto.Prezzo < 301)
                        {
                            set = set.Replace(" ", "");
                            <p class="card-prezzo">Prezzo: @prodotto.Prezzo $</p>
                            <a asp-page="Prodotto" asp-route-nome="@prodotto.Nome" class="btn btn-primary" style="@set">Dettaglio</a>
                            //si darà il nome del prodotto, il cs si occuperà di rintracciare gli altri dati connessi allo stesso prodotto con tale nome
                        }
                        else
                        {
                            color = "red";
                            textC = "white";
                            textSet = "color: " + textC + ";";
                            set = "border-color: " + color + "; background-color: " + color + ";" + textSet;
                            set = set.Replace(" ", "");
                            <p class="card-prezzo">Prezzo: @prodotto.Prezzo $</p>
                            //<!--basically, ya want to don't have to use all these asp-route-X, make a json to take from that instead of namig all of em-->
                            <a asp-page="Prodotto" asp-route-nome="@prodotto.Nome" class="btn btn-primary" style="@set">Dettaglio</a>
                        }
                    }
                </div>
            </div>
        </div>
    }
</div>
<!--how bout nogigognojnglskdnflkn-->
<form method="get">
    <input type="hidden" name="minPrezzo" value="@Request.Query["minPrezzo"]" />
    <input type="hidden" name="maxPrezzo" value="@Request.Query["maxPrezzo"]" />
    <button type="submit" class="btn btn-primary" name="pageIndex" value="1">1</button>
    <button type="submit" class="btn btn-primary" name="pageIndex" value="2">2</button>
    <button type="submit" class="btn btn-primary" name="pageIndex" value="3">3</button>
</form>


<p>Pagina prodotto</p>
